{"ast":null,"code":"var _jsxFileName = \"/home/system8/Desktop/MyFirstReactApp/splitwise-app/src/components/samplebutton.jsx\";\nimport React, { Component } from \"react\";\n\nclass SampleButton extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(ButtonToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => setModalShow(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \"Launch vertically centered modal\"), React.createElement(MyVerticallyCenteredModal, {\n      show: modalShow,\n      onHide: () => setModalShow(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SampleButton;","map":{"version":3,"sources":["/home/system8/Desktop/MyFirstReactApp/splitwise-app/src/components/samplebutton.jsx"],"names":["React","Component","SampleButton","state","render","setModalShow","modalShow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCE,KADmC,GAC3B,EAD2B;AAAA;;AAEnCC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,IAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,EAKE,oBAAC,yBAAD;AACE,MAAA,IAAI,EAAEC,SADR;AAEE,MAAA,MAAM,EAAE,MAAMD,YAAY,CAAC,KAAD,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAYD;;AAfkC;;AAkBrC,eAAeH,YAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass SampleButton extends Component {\n  state = {};\n  render() {\n    return (\n      <ButtonToolbar>\n        <Button variant=\"primary\" onClick={() => setModalShow(true)}>\n          Launch vertically centered modal\n        </Button>\n\n        <MyVerticallyCenteredModal\n          show={modalShow}\n          onHide={() => setModalShow(false)}\n        />\n      </ButtonToolbar>\n    );\n  }\n}\n\nexport default SampleButton;\n"]},"metadata":{},"sourceType":"module"}