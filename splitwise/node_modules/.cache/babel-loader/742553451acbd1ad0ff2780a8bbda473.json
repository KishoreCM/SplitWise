{"ast":null,"code":"var _jsxFileName = \"/home/system8/Desktop/MyFirstReactApp/Node_Sequelize/splitwise/src/components/leftpanel.jsx\";\nimport React, { Component } from \"react\";\nimport GroupTags from \"./groupTags\";\nimport FriendTags from \"./friendtags\";\nimport axios from \"axios\";\n\nclass LeftPanel extends Component {\n  constructor(...args) {\n    super(...args);\n    this.groupFriends = [];\n\n    this.mapSimilarGrpMembers = async () => {\n      let response = [];\n\n      for (let i = 0; i < this.props.group_data.length; i++) {\n        let groupId = new FormData();\n        groupId.append(\"group_id\", this.props.group_data[i].id);\n        let request = axios({\n          method: \"post\",\n          url: \"/app/user/group/friends\",\n          data: groupId,\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        response.push(request);\n      }\n\n      axios.all(response).then(axios.spread((...responses) => {\n        responses.forEach(res => {\n          console.log(\"axios all: \", res.data.friends);\n        });\n      })).catch(error => console.log(error));\n      /*\n        this.groupFriends = this.groupFriends.concat(response.data.friends);\n      \n      console.log(\"groupFriends\", this.groupFriends);\n       let belongsToGrps = [];\n       for (let j = 0; j < this.groupFriends.length; j++) {\n        if (\n          !belongsToGrps.some(user => user.name === this.groupFriends[j].name)\n        ) {\n          belongsToGrps.push({\n            name: this.groupFriends[j].name,\n            belongsTo: [this.groupFriends[j].groups_id]\n          });\n        } else {\n          for (let k = 0; k < belongsToGrps.length; k++) {\n            if (belongsToGrps[k].name === this.groupFriends[j].name) {\n              belongsToGrps[k].belongsTo.push(this.groupFriends[j].groups_id);\n              break;\n            }\n          }\n        }\n      }\n       console.log(\"belongsToGrps\", belongsToGrps[0]);\n      console.log(\"returned\");\n      return belongsToGrps;*/\n    };\n\n    this.displayGrpFriends = () => {\n      let belongsToGrps;\n      this.mapSimilarGrpMembers();\n      /*.then(result => {\n      belongsToGrps = result;\n      console.log(belongsToGrps);*/\n\n      /*return (\n          <FriendTags\n            grpFriends={belongsToGrps}\n            handleClick={this.props.displayFrndDetails}\n          />\n        );\n      });*/\n\n      return \"<FriendTags />\";\n    };\n  }\n\n  displayGroups() {\n    //let groups = JSON.parse(AddGroup.getGroups());\n    let groupTags = [];\n\n    if (this.props.group_data) {\n      for (var i = 0; i < this.props.group_data.length; i++) {\n        groupTags.push(React.createElement(GroupTags, {\n          key: i,\n          id: i,\n          groupTags: this.props.group_data[i].name,\n          group_data: this.props.group_data[i],\n          handleClick: this.props.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }));\n      }\n    }\n\n    return groupTags;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"leftpanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"view_options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      /*href=\"www.splitwise.com\"*/\n      id: \"dashboard_option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Dashboard\"), React.createElement(\"div\", {\n      className: \"group_tags\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"GROUPS\", React.createElement(\"a\", {\n      id: \"add_group\",\n      href: \"/addgroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"+ Add\")), this.displayGroups()), React.createElement(\"div\", {\n      className: \"group_tags\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"FRIENDS\", React.createElement(\"a\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      id: \"add_group\"\n      /*href=\"/addgroup\"*/\n      ,\n      onClick: () => this.props.setAddFrndsModalShow(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"+ Add Friends\")), this.displayGrpFriends())));\n  }\n\n}\n\nexport default LeftPanel;","map":{"version":3,"sources":["/home/system8/Desktop/MyFirstReactApp/Node_Sequelize/splitwise/src/components/leftpanel.jsx"],"names":["React","Component","GroupTags","FriendTags","axios","LeftPanel","groupFriends","mapSimilarGrpMembers","response","i","props","group_data","length","groupId","FormData","append","id","request","method","url","data","headers","push","all","then","spread","responses","forEach","res","console","log","friends","catch","error","displayGrpFriends","belongsToGrps","displayGroups","groupTags","name","handleClick","render","cursor","setAddFrndsModalShow"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport GroupTags from \"./groupTags\";\nimport FriendTags from \"./friendtags\";\nimport axios from \"axios\";\n\nclass LeftPanel extends Component {\n  displayGroups() {\n    //let groups = JSON.parse(AddGroup.getGroups());\n    let groupTags = [];\n    if (this.props.group_data) {\n      for (var i = 0; i < this.props.group_data.length; i++) {\n        groupTags.push(\n          <GroupTags\n            key={i}\n            id={i}\n            groupTags={this.props.group_data[i].name}\n            group_data={this.props.group_data[i]}\n            handleClick={this.props.handleClick}\n          />\n        );\n      }\n    }\n\n    return groupTags;\n  }\n\n  groupFriends = [];\n\n  mapSimilarGrpMembers = async () => {\n    let response = [];\n    for (let i = 0; i < this.props.group_data.length; i++) {\n      let groupId = new FormData();\n\n      groupId.append(\"group_id\", this.props.group_data[i].id);\n\n      let request = axios({\n        method: \"post\",\n        url: \"/app/user/group/friends\",\n        data: groupId,\n        headers: { \"Content-Type\": \"multipart/form-data\" }\n      });\n\n      response.push(request);\n    }\n\n    axios\n      .all(response)\n      .then(\n        axios.spread((...responses) => {\n          responses.forEach(res => {\n            console.log(\"axios all: \", res.data.friends);\n          });\n        })\n      )\n      .catch(error => console.log(error));\n    /*\n      this.groupFriends = this.groupFriends.concat(response.data.friends);\n    \n    console.log(\"groupFriends\", this.groupFriends);\n\n    let belongsToGrps = [];\n\n    for (let j = 0; j < this.groupFriends.length; j++) {\n      if (\n        !belongsToGrps.some(user => user.name === this.groupFriends[j].name)\n      ) {\n        belongsToGrps.push({\n          name: this.groupFriends[j].name,\n          belongsTo: [this.groupFriends[j].groups_id]\n        });\n      } else {\n        for (let k = 0; k < belongsToGrps.length; k++) {\n          if (belongsToGrps[k].name === this.groupFriends[j].name) {\n            belongsToGrps[k].belongsTo.push(this.groupFriends[j].groups_id);\n            break;\n          }\n        }\n      }\n    }\n\n    console.log(\"belongsToGrps\", belongsToGrps[0]);\n    console.log(\"returned\");\n    return belongsToGrps;*/\n  };\n\n  displayGrpFriends = () => {\n    let belongsToGrps;\n    this.mapSimilarGrpMembers(); /*.then(result => {\n      belongsToGrps = result;\n      console.log(belongsToGrps);*/\n    /*return (\n        <FriendTags\n          grpFriends={belongsToGrps}\n          handleClick={this.props.displayFrndDetails}\n        />\n      );\n    });*/\n    return \"<FriendTags />\";\n  };\n\n  render() {\n    return (\n      <div id=\"leftpanel\">\n        <div id=\"view_options\">\n          <a /*href=\"www.splitwise.com\"*/ id=\"dashboard_option\">Dashboard</a>\n          <div className=\"group_tags\">\n            <div className=\"header\">\n              GROUPS\n              <a id=\"add_group\" href=\"/addgroup\">\n                + Add\n              </a>\n            </div>\n\n            {this.displayGroups()}\n          </div>\n\n          <div className=\"group_tags\">\n            <div className=\"header\">\n              FRIENDS\n              <a\n                style={{ cursor: \"pointer\" }}\n                id=\"add_group\"\n                /*href=\"/addgroup\"*/ onClick={() =>\n                  this.props.setAddFrndsModalShow(true)\n                }\n              >\n                + Add Friends\n              </a>\n            </div>\n            {this.displayGrpFriends()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeftPanel;\n"]},"metadata":{},"sourceType":"module"}