{"ast":null,"code":"import Axios from \"axios\";\n\nclass Auth {\n  constructor() {\n    this.hasAnyGroup = async () => {\n      let currentUser = new FormData();\n      currentUser.append(\"user\", sessionStorage.getItem(\"LoggedInUser\"));\n      let group = await axios({\n        method: \"post\",\n        url: \"/app/get/group\",\n        data: currentUser,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n    };\n  }\n\n  login(user, callback) {\n    //this.authenticated = true;\n    sessionStorage.setItem(\"LoggedInUser\", user);\n    this.hasAnyGroup();\n    callback();\n  }\n\n  logout() {\n    //this.authenticated = false;\n    sessionStorage.removeItem(\"LoggedInUser\");\n    sessionStorage.removeItem(\"current_grp_switch\"); //callback();\n  }\n\n  isAuthenticated() {\n    let authenticated = sessionStorage.getItem(\"LoggedInUser\");\n    return authenticated;\n  }\n\n  getCurrentGrpSwitch() {\n    return sessionStorage.getItem(\"current_grp_switch\");\n  }\n\n  setCurrentGrpSwitch(groupName) {\n    sessionStorage.setItem(\"current_grp_switch\", groupName);\n  }\n\n}\n\nexport default new Auth();","map":{"version":3,"sources":["/home/system8/Desktop/MyFirstReactApp/Node_Sequelize/splitwise/src/auth.js"],"names":["Axios","Auth","hasAnyGroup","currentUser","FormData","append","sessionStorage","getItem","group","axios","method","url","data","headers","login","user","callback","setItem","logout","removeItem","isAuthenticated","authenticated","getCurrentGrpSwitch","setCurrentGrpSwitch","groupName"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,CAAW;AAAA;AAAA,SAKTC,WALS,GAKK,YAAY;AACxB,UAAIC,WAAW,GAAG,IAAIC,QAAJ,EAAlB;AACAD,MAAAA,WAAW,CAACE,MAAZ,CAAmB,MAAnB,EAA2BC,cAAc,CAACC,OAAf,CAAuB,cAAvB,CAA3B;AACA,UAAIC,KAAK,GAAG,MAAMC,KAAK,CAAC;AACtBC,QAAAA,MAAM,EAAE,MADc;AAEtBC,QAAAA,GAAG,EAAE,gBAFiB;AAGtBC,QAAAA,IAAI,EAAET,WAHgB;AAItBU,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAJa,OAAD,CAAvB;AAMD,KAdQ;AAAA;;AAgBTC,EAAAA,KAAK,CAACC,IAAD,EAAOC,QAAP,EAAiB;AACpB;AACAV,IAAAA,cAAc,CAACW,OAAf,CAAuB,cAAvB,EAAuCF,IAAvC;AACA,SAAKb,WAAL;AACAc,IAAAA,QAAQ;AACT;;AAEDE,EAAAA,MAAM,GAAG;AACP;AACAZ,IAAAA,cAAc,CAACa,UAAf,CAA0B,cAA1B;AACAb,IAAAA,cAAc,CAACa,UAAf,CAA0B,oBAA1B,EAHO,CAIP;AACD;;AAEDC,EAAAA,eAAe,GAAG;AAChB,QAAIC,aAAa,GAAGf,cAAc,CAACC,OAAf,CAAuB,cAAvB,CAApB;AACA,WAAOc,aAAP;AACD;;AAEDC,EAAAA,mBAAmB,GAAG;AACpB,WAAOhB,cAAc,CAACC,OAAf,CAAuB,oBAAvB,CAAP;AACD;;AAEDgB,EAAAA,mBAAmB,CAACC,SAAD,EAAY;AAC7BlB,IAAAA,cAAc,CAACW,OAAf,CAAuB,oBAAvB,EAA6CO,SAA7C;AACD;;AAzCQ;;AA4CX,eAAe,IAAIvB,IAAJ,EAAf","sourcesContent":["import Axios from \"axios\";\n\nclass Auth {\n  /*constructor() {\n    this.authenticated = false;\n  }*/\n\n  hasAnyGroup = async () => {\n    let currentUser = new FormData();\n    currentUser.append(\"user\", sessionStorage.getItem(\"LoggedInUser\"));\n    let group = await axios({\n      method: \"post\",\n      url: \"/app/get/group\",\n      data: currentUser,\n      headers: { \"Content-Type\": \"multipart/form-data\" }\n    });\n  };\n\n  login(user, callback) {\n    //this.authenticated = true;\n    sessionStorage.setItem(\"LoggedInUser\", user);\n    this.hasAnyGroup();\n    callback();\n  }\n\n  logout() {\n    //this.authenticated = false;\n    sessionStorage.removeItem(\"LoggedInUser\");\n    sessionStorage.removeItem(\"current_grp_switch\");\n    //callback();\n  }\n\n  isAuthenticated() {\n    let authenticated = sessionStorage.getItem(\"LoggedInUser\");\n    return authenticated;\n  }\n\n  getCurrentGrpSwitch() {\n    return sessionStorage.getItem(\"current_grp_switch\");\n  }\n\n  setCurrentGrpSwitch(groupName) {\n    sessionStorage.setItem(\"current_grp_switch\", groupName);\n  }\n}\n\nexport default new Auth();\n"]},"metadata":{},"sourceType":"module"}