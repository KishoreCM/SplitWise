{"ast":null,"code":"var _jsxFileName = \"/home/system8/Desktop/MyFirstReactApp/Node_Sequelize/splitwise/src/components/leftpanel.jsx\";\nimport React, { Component } from \"react\";\nimport GroupTags from \"./groupTags\";\nimport FriendTags from \"./friendtags\";\nimport axios from \"axios\";\n\nclass LeftPanel extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      groupFriends: []\n    };\n\n    this.mapSimilarGrpMembers = () => {\n      let belongsToGrps = [];\n\n      for (let friend of this.props.group_data.friends) {\n        if (!belongsToGrps.some(user => user.name === friend.name)) {\n          belongsToGrps.push({\n            name: friend.name,\n            belongsTo: [friend.groups_id]\n          });\n        } else {\n          for (let k = 0; k < belongsToGrps.length; k++) {\n            if (belongsToGrps[k].name === friend.name) {\n              belongsToGrps[k].belongsTo.push(friend.groups_id);\n              break;\n            }\n          }\n        }\n      }\n      /*    \n      for (let j = 0; j < this.props.group_data.friends.length; j++) {\n        if (\n          !belongsToGrps.some(\n            user => user.name === this.props.group_data.friends[j].name\n          )\n        ) {\n          belongsToGrps.push({\n            name: this.props.group_data.friends[j].name,\n            belongsTo: [this.props.group_data.friends[j].groups_id]\n          });\n        } else {\n          for (let k = 0; k < belongsToGrps.length; k++) {\n            if (belongsToGrps[k].name === this.props.group_data.friends[j].name) {\n              belongsToGrps[k].belongsTo.push(\n                this.props.group_data.friends[j].groups_id\n              );\n              break;\n            }\n          }\n        }\n      }\n      */\n\n\n      console.log(\"belongsToGrps\", belongsToGrps);\n      return belongsToGrps;\n    };\n\n    this.displayGrpFriends = () => {\n      let belongsToGrps = this.mapSimilarGrpMembers();\n      return React.createElement(FriendTags, {\n        grpFriends: belongsToGrps,\n        handleClick: this.props.displayFrndDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    };\n  }\n\n  /*\n  async componentDidMount() {\n    let user = new FormData();\n    user.append(\"user\", sessionStorage.getItem(\"LoggedInUser\"));\n    let res = await axios({\n      method: \"post\",\n      url: \"/app/user/group/friends\",\n      data: user,\n      headers: { \"Content-Type\": \"multipart/form-data\" }\n    });\n     console.log(\"Group Friends: \", res.data.grpFriends);\n     let grpFriends = [];\n    for (let friend of res.data.grpFriends) {\n      grpFriends = grpFriends.concat(friend);\n    }\n    this.setState({ groupFriends: grpFriends });\n  }\n  */\n  displayGroups() {\n    //let groups = JSON.parse(AddGroup.getGroups());\n    let groupTags = [];\n\n    for (var i = 0; i < this.props.group_data.length; i++) {\n      groupTags.push(React.createElement(GroupTags, {\n        key: i,\n        id: i,\n        groupTags: this.props.group_data[i].name,\n        group_data: this.props.group_data[i],\n        handleClick: this.props.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n    }\n\n    return groupTags;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"leftpanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"view_options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      /*href=\"www.splitwise.com\"*/\n      id: \"dashboard_option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Dashboard\"), React.createElement(\"div\", {\n      className: \"group_tags\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"GROUPS\", React.createElement(\"a\", {\n      id: \"add_group\",\n      href: \"/addgroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"+ Add\")), this.displayGroups()), React.createElement(\"div\", {\n      className: \"group_tags\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"FRIENDS\", React.createElement(\"a\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      id: \"add_group\"\n      /*href=\"/addgroup\"*/\n      ,\n      onClick: () => this.props.setAddFrndsModalShow(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"+ Add Friends\")), this.displayGrpFriends())));\n  }\n\n}\n\nexport default LeftPanel;","map":{"version":3,"sources":["/home/system8/Desktop/MyFirstReactApp/Node_Sequelize/splitwise/src/components/leftpanel.jsx"],"names":["React","Component","GroupTags","FriendTags","axios","LeftPanel","state","groupFriends","mapSimilarGrpMembers","belongsToGrps","friend","props","group_data","friends","some","user","name","push","belongsTo","groups_id","k","length","console","log","displayGrpFriends","displayFrndDetails","displayGroups","groupTags","i","handleClick","render","cursor","setAddFrndsModalShow"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport GroupTags from \"./groupTags\";\nimport FriendTags from \"./friendtags\";\nimport axios from \"axios\";\n\nclass LeftPanel extends Component {\n  state = {\n    groupFriends: []\n  };\n  /*\n  async componentDidMount() {\n    let user = new FormData();\n    user.append(\"user\", sessionStorage.getItem(\"LoggedInUser\"));\n    let res = await axios({\n      method: \"post\",\n      url: \"/app/user/group/friends\",\n      data: user,\n      headers: { \"Content-Type\": \"multipart/form-data\" }\n    });\n\n    console.log(\"Group Friends: \", res.data.grpFriends);\n\n    let grpFriends = [];\n    for (let friend of res.data.grpFriends) {\n      grpFriends = grpFriends.concat(friend);\n    }\n    this.setState({ groupFriends: grpFriends });\n  }\n*/\n\n  displayGroups() {\n    //let groups = JSON.parse(AddGroup.getGroups());\n    let groupTags = [];\n    for (var i = 0; i < this.props.group_data.length; i++) {\n      groupTags.push(\n        <GroupTags\n          key={i}\n          id={i}\n          groupTags={this.props.group_data[i].name}\n          group_data={this.props.group_data[i]}\n          handleClick={this.props.handleClick}\n        />\n      );\n    }\n\n    return groupTags;\n  }\n\n  mapSimilarGrpMembers = () => {\n    let belongsToGrps = [];\n\n    for (let friend of this.props.group_data.friends) {\n      if (!belongsToGrps.some(user => user.name === friend.name)) {\n        belongsToGrps.push({\n          name: friend.name,\n          belongsTo: [friend.groups_id]\n        });\n      } else {\n        for (let k = 0; k < belongsToGrps.length; k++) {\n          if (belongsToGrps[k].name === friend.name) {\n            belongsToGrps[k].belongsTo.push(friend.groups_id);\n            break;\n          }\n        }\n      }\n    }\n\n    /*    \n    for (let j = 0; j < this.props.group_data.friends.length; j++) {\n      if (\n        !belongsToGrps.some(\n          user => user.name === this.props.group_data.friends[j].name\n        )\n      ) {\n        belongsToGrps.push({\n          name: this.props.group_data.friends[j].name,\n          belongsTo: [this.props.group_data.friends[j].groups_id]\n        });\n      } else {\n        for (let k = 0; k < belongsToGrps.length; k++) {\n          if (belongsToGrps[k].name === this.props.group_data.friends[j].name) {\n            belongsToGrps[k].belongsTo.push(\n              this.props.group_data.friends[j].groups_id\n            );\n            break;\n          }\n        }\n      }\n    }\n*/\n    console.log(\"belongsToGrps\", belongsToGrps);\n    return belongsToGrps;\n  };\n\n  displayGrpFriends = () => {\n    let belongsToGrps = this.mapSimilarGrpMembers();\n    return (\n      <FriendTags\n        grpFriends={belongsToGrps}\n        handleClick={this.props.displayFrndDetails}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <div id=\"leftpanel\">\n        <div id=\"view_options\">\n          <a /*href=\"www.splitwise.com\"*/ id=\"dashboard_option\">Dashboard</a>\n          <div className=\"group_tags\">\n            <div className=\"header\">\n              GROUPS\n              <a id=\"add_group\" href=\"/addgroup\">\n                + Add\n              </a>\n            </div>\n\n            {this.displayGroups()}\n          </div>\n\n          <div className=\"group_tags\">\n            <div className=\"header\">\n              FRIENDS\n              <a\n                style={{ cursor: \"pointer\" }}\n                id=\"add_group\"\n                /*href=\"/addgroup\"*/ onClick={() =>\n                  this.props.setAddFrndsModalShow(true)\n                }\n              >\n                + Add Friends\n              </a>\n            </div>\n            {this.displayGrpFriends()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeftPanel;\n"]},"metadata":{},"sourceType":"module"}