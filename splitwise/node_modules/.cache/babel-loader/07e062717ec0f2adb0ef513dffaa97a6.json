{"ast":null,"code":"class AddGroup {\n  createGroup(group, callback) {\n    let anyGroup = localStorage.getItem(\"Groups\");\n\n    if (anyGroup) {\n      anyGroup = JSON.parse(anyGroup);\n      anyGroup.push(group);\n    } else {\n      anyGroup = [];\n      anyGroup.push(group);\n    }\n\n    localStorage.setItem(\"Groups\", JSON.stringify(anyGroup));\n    sessionStorage.setItem(\"current_grp_switch\", group.group_name);\n    callback();\n  }\n\n  getGroups() {\n    return localStorage.getItem(\"Groups\");\n  }\n\n  setAddExpense(updated_data, callback) {\n    let currentData = JSON.parse(this.getGroups());\n\n    for (let i = 0; i < currentData.length; i++) {\n      if (currentData[i].group_name === updated_data.group_name) {\n        currentData[i].friends_name = updated_data.friends_name;\n        currentData[i].owed = updated_data.owed;\n        currentData[i].expenses = updated_data.expenses;\n        localStorage.setItem(\"Groups\", JSON.stringify(currentData));\n      }\n    }\n\n    callback();\n  }\n\n  getCurrentGrpSwitch() {\n    let groupsData = JSON.parse(localStorage.getItem(\"Groups\"));\n    let currentGrpName = sessionStorage.getItem(\"current_grp_switch\");\n\n    if (currentGrpName) {\n      let grp = groupsData.filter(g => g.group_name === currentGrpName);\n      return grp[0];\n    }\n\n    return groupsData[1];\n  }\n\n  setCurrentGrpSwitch(group_name) {\n    sessionStorage.setItem(\"current_grp_switch\", group_name);\n  }\n\n  deleteGrpExpense(totalOwed, grpFriends, currentExpense, grpExpense, id, callback) {\n    let grps = JSON.parse(localStorage.getItem(\"Groups\"));\n    let initalExpLen = 0;\n\n    for (let i = 0; i < grps.length; i++) {\n      if (grps[i].group_name === grpExpense.group_name) {\n        initalExpLen = grps[i].expenses.length;\n        grps[i].owed = totalOwed;\n        grps[i].friends_name = grpFriends;\n        let updatedExpenses = grpExpense.expenses.filter((expense, index) => expense[\"expense_\" + index] !== currentExpense[\"expense_\" + id]);\n        let refineUpdatedExpense = [];\n        let idxI = 0;\n        let idxJ = 0;\n        let exp = {};\n\n        while (idxJ < initalExpLen) {\n          if (updatedExpenses[idxI][\"expense_\" + idxJ] !== undefined) {\n            exp[\"expense_\" + idxI] = updatedExpenses[idxI][\"expense_\" + idxJ];\n            exp[\"youPaid_\" + idxI] = updatedExpenses[idxI][\"youPaid_\" + idxJ];\n            exp[\"youLent_\" + idxI] = updatedExpenses[idxI][\"youLent_\" + idxJ];\n            exp[\"onMonth\"] = updatedExpenses[idxI][\"onMonth\"];\n            exp[\"onDate\"] = updatedExpenses[idxI][\"onDate\"];\n            idxI++;\n            refineUpdatedExpense.push(exp);\n            exp = {};\n          }\n\n          idxJ++;\n        }\n\n        grps[i].expenses = refineUpdatedExpense;\n        break;\n      }\n    }\n\n    localStorage.setItem(\"Groups\", JSON.stringify(grps));\n    callback();\n  }\n\n}\n\nexport default new AddGroup();","map":{"version":3,"sources":["/home/system8/Desktop/MyFirstReactApp/splitwise-app/src/addgroupcontroller.js"],"names":["AddGroup","createGroup","group","callback","anyGroup","localStorage","getItem","JSON","parse","push","setItem","stringify","sessionStorage","group_name","getGroups","setAddExpense","updated_data","currentData","i","length","friends_name","owed","expenses","getCurrentGrpSwitch","groupsData","currentGrpName","grp","filter","g","setCurrentGrpSwitch","deleteGrpExpense","totalOwed","grpFriends","currentExpense","grpExpense","id","grps","initalExpLen","updatedExpenses","expense","index","refineUpdatedExpense","idxI","idxJ","exp","undefined"],"mappings":"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","sourcesContent":["class AddGroup {\n  createGroup(group, callback) {\n    let anyGroup = localStorage.getItem(\"Groups\");\n    if (anyGroup) {\n      anyGroup = JSON.parse(anyGroup);\n      anyGroup.push(group);\n    } else {\n      anyGroup = [];\n      anyGroup.push(group);\n    }\n    localStorage.setItem(\"Groups\", JSON.stringify(anyGroup));\n    sessionStorage.setItem(\"current_grp_switch\", group.group_name);\n    callback();\n  }\n\n  getGroups() {\n    return localStorage.getItem(\"Groups\");\n  }\n\n  setAddExpense(updated_data, callback) {\n    let currentData = JSON.parse(this.getGroups());\n\n    for (let i = 0; i < currentData.length; i++) {\n      if (currentData[i].group_name === updated_data.group_name) {\n        currentData[i].friends_name = updated_data.friends_name;\n        currentData[i].owed = updated_data.owed;\n        currentData[i].expenses = updated_data.expenses;\n        localStorage.setItem(\"Groups\", JSON.stringify(currentData));\n      }\n    }\n    callback();\n  }\n\n  getCurrentGrpSwitch() {\n    let groupsData = JSON.parse(localStorage.getItem(\"Groups\"));\n    let currentGrpName = sessionStorage.getItem(\"current_grp_switch\");\n    if (currentGrpName) {\n      let grp = groupsData.filter(g => g.group_name === currentGrpName);\n      return grp[0];\n    }\n\n    return groupsData[1];\n  }\n\n  setCurrentGrpSwitch(group_name) {\n    sessionStorage.setItem(\"current_grp_switch\", group_name);\n  }\n\n  deleteGrpExpense(\n    totalOwed,\n    grpFriends,\n    currentExpense,\n    grpExpense,\n    id,\n    callback\n  ) {\n    let grps = JSON.parse(localStorage.getItem(\"Groups\"));\n    let initalExpLen = 0;\n\n    for (let i = 0; i < grps.length; i++) {\n      if (grps[i].group_name === grpExpense.group_name) {\n        initalExpLen = grps[i].expenses.length;\n        grps[i].owed = totalOwed;\n        grps[i].friends_name = grpFriends;\n        let updatedExpenses = grpExpense.expenses.filter(\n          (expense, index) =>\n            expense[\"expense_\" + index] !== currentExpense[\"expense_\" + id]\n        );\n\n        let refineUpdatedExpense = [];\n        let idxI = 0;\n        let idxJ = 0;\n        let exp = {};\n        while (idxJ < initalExpLen) {\n          if (updatedExpenses[idxI][\"expense_\" + idxJ] !== undefined) {\n            exp[\"expense_\" + idxI] = updatedExpenses[idxI][\"expense_\" + idxJ];\n            exp[\"youPaid_\" + idxI] = updatedExpenses[idxI][\"youPaid_\" + idxJ];\n            exp[\"youLent_\" + idxI] = updatedExpenses[idxI][\"youLent_\" + idxJ];\n            exp[\"onMonth\"] = updatedExpenses[idxI][\"onMonth\"];\n            exp[\"onDate\"] = updatedExpenses[idxI][\"onDate\"];\n            idxI++;\n            refineUpdatedExpense.push(exp);\n            exp = {};\n          }\n          idxJ++;\n        }\n\n        grps[i].expenses = refineUpdatedExpense;\n        break;\n      }\n    }\n    localStorage.setItem(\"Groups\", JSON.stringify(grps));\n    callback();\n  }\n}\n\nexport default new AddGroup();\n"]},"metadata":{},"sourceType":"module"}