{"ast":null,"code":"var _jsxFileName = \"/home/system8/Desktop/MyFirstReactApp/splitwise-app/src/components/addexpense.jsx\";\nimport React, { Component } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport AddGroup from \"../addgroupcontroller\";\n\nclass AddExpense extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      current_data: this.props.current_data\n    };\n\n    this.addExpense = () => {\n      let expenses = this.state.current_data.expenses;\n      let expensesSize = expenses ? Object.keys(expenses).length : 0;\n      let expenseName = this.refs.description.value;\n      let totalAmount = this.refs.amount.value;\n      let members_count = this.state.current_data.members_count;\n      let amountPerHead = (totalAmount / (Number(members_count) + 1)).toFixed(2);\n      console.log(amountPerHead);\n      let updateCurrentData = this.state.current_data; //console.log(this.state.current_data);\n\n      updateCurrentData[0].expenses[\"expense\" + expensesSize] = expenseName;\n\n      for (var i = 0; i < updateCurrentData.friends_name.length; i++) {\n        updateCurrentData.friends_name[i][\"owes_\" + i] = amountPerHead;\n      } //console.log(updateCurrentData.friends_name);\n\n\n      updateCurrentData.owed = totalAmount - amountPerHead;\n      this.setState({\n        current_data: updateCurrentData\n      });\n      AddGroup.setAddExpense(this.state.current_data);\n    };\n  }\n\n  render() {\n    return React.createElement(Modal, Object.assign({}, this.props, {\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Add expense\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"With\", \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"you\")), \" \", \"and all of:\", \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.props.group_name)))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        marginRight: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-arrow-down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Enter a description\"))), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Description\",\n      ref: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Amount in Rs.\",\n      ref: \"amount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Enter amount\")), \" \", React.createElement(\"span\", {\n      style: {\n        marginLeft: \"60px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-arrow-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }))))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.addExpense,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Save\")));\n  }\n\n}\n\nexport default AddExpense; //import \"../modal.css\";\n\n/*\nclass AddExpense extends Component {\n  state = {};\n\n  toggleModal = e => {\n    let modal = this.modalElement;\n    if (modal.style.display === \"none\") modal.style.display = \"block\";\n    else modal.style.display = \"none\";\n  };\n\n  render() {\n    return (\n      <div>\n        <button onClick={e => this.toggleModal()}>button</button>\n\n        <div\n          ref={modal => (this.modalElement = modal)}\n          className=\"modal\"\n          id=\"postModal\"\n          style={{ display: \"none\" }}\n        >\n          <div className=\"popup\">\n            <h2>Add New Movie</h2>\n            <button\n              ref={modalClose => (this.modalCloseElement = modalClose)}\n              id=\"closeButton\"\n              onClick={e => this.toggleModal(e)}\n              className=\"close\"\n              style={{ height: \"5vh\" }}\n            >\n              &times;\n            </button>\n            <div className=\"content\">\n              <input\n                type=\"text\"\n                placeholder=\"Movie Name\"\n                className=\"inputs\"\n                name=\"movieName\"\n                value={this.state.movieName}\n                onChange={e => this.change(e)}\n                style={{ height: \"4vh\" }}\n              ></input>\n              <br />\n              <br />\n              <input\n                type=\"text\"\n                placeholder=\"Movie Description\"\n                className=\"inputs\"\n                name=\"movieDesc\"\n                value={this.state.movieDesc}\n                onChange={e => this.change(e)}\n              ></input>\n              <br />\n              <br />\n              <input\n                type=\"text\"\n                placeholder=\"Cast\"\n                className=\"inputs\"\n                name=\"movieCast\"\n                value={this.state.movieCast}\n                onChange={e => this.change(e)}\n                style={{ height: \"4vh\" }}\n              ></input>\n              <br />\n              <br />\n              <input\n                type=\"text\"\n                placeholder=\"Director\"\n                className=\"inputs\"\n                name=\"movieDirector\"\n                value={this.state.movieDirector}\n                onChange={e => this.change(e)}\n                style={{ height: \"4vh\" }}\n              ></input>\n              <br />\n              <br />\n              <input\n                type=\"text\"\n                placeholder=\"Rating (on a scale of 5)\"\n                className=\"inputs\"\n                name=\"movieRating\"\n                value={this.state.movieRating}\n                onChange={e => this.change(e)}\n                style={{ height: \"4vh\" }}\n              ></input>\n              <br />\n              <br />\n              <br />\n              <label style={{ color: \"black\" }}>\n                Upload Image ---> &nbsp;&nbsp;\n              </label>\n              <input\n                style={{ width: \"60%\", color: \"black\" }}\n                type=\"file\"\n                name=\"movieImage\"\n                onChange={e => this.imageUpload(e)}\n              ></input>\n              <br />\n              <br />\n              <button onClick={e => this.addMovie(e)} id=\"modalPostButton\">\n                Add Movie\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddExpense;\n*/","map":{"version":3,"sources":["/home/system8/Desktop/MyFirstReactApp/splitwise-app/src/components/addexpense.jsx"],"names":["React","Component","Modal","Button","AddGroup","AddExpense","state","current_data","props","addExpense","expenses","expensesSize","Object","keys","length","expenseName","refs","description","value","totalAmount","amount","members_count","amountPerHead","Number","toFixed","console","log","updateCurrentData","i","friends_name","owed","setState","setAddExpense","render","group_name","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport AddGroup from \"../addgroupcontroller\";\n\nclass AddExpense extends Component {\n  state = {\n    current_data: this.props.current_data\n  };\n\n  addExpense = () => {\n    let expenses = this.state.current_data.expenses;\n    let expensesSize = expenses ? Object.keys(expenses).length : 0;\n    let expenseName = this.refs.description.value;\n    let totalAmount = this.refs.amount.value;\n    let { members_count } = this.state.current_data;\n    let amountPerHead = (totalAmount / (Number(members_count) + 1)).toFixed(2);\n    console.log(amountPerHead);\n    let updateCurrentData = this.state.current_data;\n    //console.log(this.state.current_data);\n    updateCurrentData[0].expenses[\"expense\" + expensesSize] = expenseName;\n    for (var i = 0; i < updateCurrentData.friends_name.length; i++) {\n      updateCurrentData.friends_name[i][\"owes_\" + i] = amountPerHead;\n    }\n    //console.log(updateCurrentData.friends_name);\n\n    updateCurrentData.owed = totalAmount - amountPerHead;\n\n    this.setState({ current_data: updateCurrentData });\n    AddGroup.setAddExpense(this.state.current_data);\n  };\n\n  render() {\n    return (\n      <Modal\n        {...this.props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Add expense\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div>\n            <h6>\n              With{\" \"}\n              <b>\n                <i>you</i>\n              </b>{\" \"}\n              and all of:{\" \"}\n              <b>\n                <i>{this.props.group_name}</i>\n              </b>\n            </h6>\n          </div>\n          <div>\n            <center>\n              <span style={{ marginRight: \"20px\" }}>\n                <i className=\"fa fa-arrow-down\"></i>\n              </span>\n              <label>\n                <i>Enter a description</i>\n              </label>\n            </center>\n            <center>\n              <input type=\"text\" placeholder=\"Description\" ref=\"description\" />\n            </center>\n            <center>\n              <input type=\"text\" placeholder=\"Amount in Rs.\" ref=\"amount\" />\n            </center>\n            <center>\n              <label>\n                <i>Enter amount</i>\n              </label>{\" \"}\n              <span style={{ marginLeft: \"60px\" }}>\n                <i className=\"fa fa-arrow-up\"></i>\n              </span>\n            </center>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.addExpense}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default AddExpense;\n\n//import \"../modal.css\";\n/*\nclass AddExpense extends Component {\n  state = {};\n\n  toggleModal = e => {\n    let modal = this.modalElement;\n    if (modal.style.display === \"none\") modal.style.display = \"block\";\n    else modal.style.display = \"none\";\n  };\n\n  render() {\n    return (\n      <div>\n        <button onClick={e => this.toggleModal()}>button</button>\n\n        <div\n          ref={modal => (this.modalElement = modal)}\n          className=\"modal\"\n          id=\"postModal\"\n          style={{ display: \"none\" }}\n        >\n          <div className=\"popup\">\n            <h2>Add New Movie</h2>\n            <button\n              ref={modalClose => (this.modalCloseElement = modalClose)}\n              id=\"closeButton\"\n              onClick={e => this.toggleModal(e)}\n              className=\"close\"\n              style={{ height: \"5vh\" }}\n            >\n              &times;\n            </button>\n            <div className=\"content\">\n              <input\n                type=\"text\"\n                placeholder=\"Movie Name\"\n                className=\"inputs\"\n                name=\"movieName\"\n                value={this.state.movieName}\n                onChange={e => this.change(e)}\n                style={{ height: \"4vh\" }}\n              ></input>\n              <br />\n              <br />\n              <input\n                type=\"text\"\n                placeholder=\"Movie Description\"\n                className=\"inputs\"\n                name=\"movieDesc\"\n                value={this.state.movieDesc}\n                onChange={e => this.change(e)}\n              ></input>\n              <br />\n              <br />\n              <input\n                type=\"text\"\n                placeholder=\"Cast\"\n                className=\"inputs\"\n                name=\"movieCast\"\n                value={this.state.movieCast}\n                onChange={e => this.change(e)}\n                style={{ height: \"4vh\" }}\n              ></input>\n              <br />\n              <br />\n              <input\n                type=\"text\"\n                placeholder=\"Director\"\n                className=\"inputs\"\n                name=\"movieDirector\"\n                value={this.state.movieDirector}\n                onChange={e => this.change(e)}\n                style={{ height: \"4vh\" }}\n              ></input>\n              <br />\n              <br />\n              <input\n                type=\"text\"\n                placeholder=\"Rating (on a scale of 5)\"\n                className=\"inputs\"\n                name=\"movieRating\"\n                value={this.state.movieRating}\n                onChange={e => this.change(e)}\n                style={{ height: \"4vh\" }}\n              ></input>\n              <br />\n              <br />\n              <br />\n              <label style={{ color: \"black\" }}>\n                Upload Image ---> &nbsp;&nbsp;\n              </label>\n              <input\n                style={{ width: \"60%\", color: \"black\" }}\n                type=\"file\"\n                name=\"movieImage\"\n                onChange={e => this.imageUpload(e)}\n              ></input>\n              <br />\n              <br />\n              <button onClick={e => this.addMovie(e)} id=\"modalPostButton\">\n                Add Movie\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddExpense;\n*/\n"]},"metadata":{},"sourceType":"module"}