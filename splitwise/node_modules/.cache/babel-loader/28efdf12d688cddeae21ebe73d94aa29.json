{"ast":null,"code":"class AddGroup {\n  constructor() {\n    this.users = \"\";\n    this.loggedInUser = \"\";\n    this.getCurrentUserData = \"\";\n    this.currentUserGrpData = \"\";\n  }\n\n  getUserName() {\n    return sessionStorage.getItem(\"LoggedInUser\");\n  }\n\n  createGroup(group, callback) {\n    console.log(this.currentUserGrpData);\n    let anyGroup = JSON.parse(this.currentUserGrpData);\n\n    if (anyGroup[0]) {\n      //anyGroup = JSON.parse(anyGroup);\n      anyGroup.push(group);\n    } else {\n      anyGroup = [];\n      anyGroup.push(group);\n    } //localStorage.setItem(\"Groups\", JSON.stringify(anyGroup));\n    //console.log(this.users);\n\n\n    for (let i = 0; i < this.users.length; i++) {\n      if (this.users[i].email === this.loggedInUser) {\n        this.users[i].groups = anyGroup;\n        break;\n      }\n    }\n\n    localStorage.setItem(\"signedInUsers\", JSON.stringify(this.users));\n    sessionStorage.setItem(\"current_grp_switch\", group.group_name);\n    callback();\n  }\n\n  getGroups() {\n    //return localStorage.getItem(\"Groups\");\n    this.users = JSON.parse(localStorage.getItem(\"signedInUsers\"));\n    this.loggedInUser = sessionStorage.getItem(\"LoggedInUser\");\n    this.getCurrentUserData = this.users.filter(user => user.email === this.loggedInUser);\n    this.currentUserGrpData = JSON.stringify(this.getCurrentUserData[0].groups); //console.log(this.currentUserGrpData);\n\n    return this.currentUserGrpData;\n  }\n\n  setAddExpense(updated_data, callback) {\n    let currentData = JSON.parse(this.getGroups());\n\n    for (let i = 0; i < currentData.length; i++) {\n      if (currentData[i].group_name === updated_data.group_name) {\n        currentData[i].friends_name = updated_data.friends_name;\n        currentData[i].owed = updated_data.owed;\n        currentData[i].expenses = updated_data.expenses; //localStorage.setItem(\"Groups\", JSON.stringify(currentData));\n\n        for (let i = 0; i < this.users.length; i++) {\n          if (this.users[i].email === this.loggedInUser) {\n            this.users[i].groups = currentData;\n            break;\n          }\n        }\n\n        localStorage.setItem(\"signedInUsers\", JSON.stringify(this.users));\n      }\n    }\n\n    callback();\n  }\n\n  getCurrentGrpSwitch() {\n    let groupsData = JSON.parse(this.currentUserGrpData); //if (groupsData === null) return false;\n\n    let currentGrpName = sessionStorage.getItem(\"current_grp_switch\");\n\n    if (currentGrpName) {\n      let grp = groupsData.filter(g => g.group_name === currentGrpName);\n      return grp[0];\n    }\n\n    return groupsData[0];\n  }\n\n  setCurrentGrpSwitch(group_name) {\n    sessionStorage.setItem(\"current_grp_switch\", group_name);\n  }\n\n  deleteGrpExpense(totalOwed, grpFriends, currentExpense, grpExpense, id, callback) {\n    let grps = JSON.parse(this.currentUserGrpData);\n    let uptExpLen = 0;\n\n    for (let i = 0; i < grps.length; i++) {\n      if (grps[i].group_name === grpExpense.group_name) {\n        grps[i].owed = totalOwed;\n        grps[i].friends_name = grpFriends;\n        let updatedExpenses = grpExpense.expenses.filter((expense, index) => expense[\"expense_\" + index] !== currentExpense[\"expense_\" + id]);\n        uptExpLen = updatedExpenses.length;\n        let refineUpdatedExpense = [];\n        let idxI = 0;\n        let idxJ = 0;\n        let exp = {};\n\n        while (idxI < uptExpLen) {\n          if (updatedExpenses[idxI][\"expense_\" + idxJ] !== undefined) {\n            exp[\"expense_\" + idxI] = updatedExpenses[idxI][\"expense_\" + idxJ];\n            exp[\"youPaid_\" + idxI] = updatedExpenses[idxI][\"youPaid_\" + idxJ];\n            exp[\"youLent_\" + idxI] = updatedExpenses[idxI][\"youLent_\" + idxJ];\n            exp[\"onMonth\"] = updatedExpenses[idxI][\"onMonth\"];\n            exp[\"onDate\"] = updatedExpenses[idxI][\"onDate\"];\n            idxI++;\n            refineUpdatedExpense.push(exp);\n            exp = {};\n          }\n\n          idxJ++;\n        }\n\n        grps[i].expenses = refineUpdatedExpense;\n        break;\n      }\n    } //localStorage.setItem(\"Groups\", JSON.stringify(grps));\n\n\n    for (let i = 0; i < this.users.length; i++) {\n      if (this.users[i].email === this.loggedInUser) {\n        this.users[i].groups = grps;\n        break;\n      }\n    }\n\n    localStorage.setItem(\"signedInUsers\", JSON.stringify(this.users));\n    callback();\n  }\n\n}\n\nexport default new AddGroup();","map":{"version":3,"sources":["/home/system8/Desktop/MyFirstReactApp/splitwise-app/src/addgroupcontroller.js"],"names":["AddGroup","users","loggedInUser","getCurrentUserData","currentUserGrpData","getUserName","sessionStorage","getItem","createGroup","group","callback","console","log","anyGroup","JSON","parse","push","i","length","email","groups","localStorage","setItem","stringify","group_name","getGroups","filter","user","setAddExpense","updated_data","currentData","friends_name","owed","expenses","getCurrentGrpSwitch","groupsData","currentGrpName","grp","g","setCurrentGrpSwitch","deleteGrpExpense","totalOwed","grpFriends","currentExpense","grpExpense","id","grps","uptExpLen","updatedExpenses","expense","index","refineUpdatedExpense","idxI","idxJ","exp","undefined"],"mappings":"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","sourcesContent":["class AddGroup {\n  users = \"\";\n  loggedInUser = \"\";\n  getCurrentUserData = \"\";\n  currentUserGrpData = \"\";\n\n  getUserName() {\n    return sessionStorage.getItem(\"LoggedInUser\");\n  }\n\n  createGroup(group, callback) {\n    console.log(this.currentUserGrpData);\n    let anyGroup = JSON.parse(this.currentUserGrpData);\n    if (anyGroup[0]) {\n      //anyGroup = JSON.parse(anyGroup);\n      anyGroup.push(group);\n    } else {\n      anyGroup = [];\n      anyGroup.push(group);\n    }\n    //localStorage.setItem(\"Groups\", JSON.stringify(anyGroup));\n    //console.log(this.users);\n    for (let i = 0; i < this.users.length; i++) {\n      if (this.users[i].email === this.loggedInUser) {\n        this.users[i].groups = anyGroup;\n        break;\n      }\n    }\n\n    localStorage.setItem(\"signedInUsers\", JSON.stringify(this.users));\n    sessionStorage.setItem(\"current_grp_switch\", group.group_name);\n    callback();\n  }\n\n  getGroups() {\n    //return localStorage.getItem(\"Groups\");\n    this.users = JSON.parse(localStorage.getItem(\"signedInUsers\"));\n    this.loggedInUser = sessionStorage.getItem(\"LoggedInUser\");\n    this.getCurrentUserData = this.users.filter(\n      user => user.email === this.loggedInUser\n    );\n    this.currentUserGrpData = JSON.stringify(this.getCurrentUserData[0].groups);\n    //console.log(this.currentUserGrpData);\n    return this.currentUserGrpData;\n  }\n\n  setAddExpense(updated_data, callback) {\n    let currentData = JSON.parse(this.getGroups());\n\n    for (let i = 0; i < currentData.length; i++) {\n      if (currentData[i].group_name === updated_data.group_name) {\n        currentData[i].friends_name = updated_data.friends_name;\n        currentData[i].owed = updated_data.owed;\n        currentData[i].expenses = updated_data.expenses;\n        //localStorage.setItem(\"Groups\", JSON.stringify(currentData));\n        for (let i = 0; i < this.users.length; i++) {\n          if (this.users[i].email === this.loggedInUser) {\n            this.users[i].groups = currentData;\n            break;\n          }\n        }\n        localStorage.setItem(\"signedInUsers\", JSON.stringify(this.users));\n      }\n    }\n    callback();\n  }\n\n  getCurrentGrpSwitch() {\n    let groupsData = JSON.parse(this.currentUserGrpData);\n    //if (groupsData === null) return false;\n    let currentGrpName = sessionStorage.getItem(\"current_grp_switch\");\n    if (currentGrpName) {\n      let grp = groupsData.filter(g => g.group_name === currentGrpName);\n      return grp[0];\n    }\n    return groupsData[0];\n  }\n\n  setCurrentGrpSwitch(group_name) {\n    sessionStorage.setItem(\"current_grp_switch\", group_name);\n  }\n\n  deleteGrpExpense(\n    totalOwed,\n    grpFriends,\n    currentExpense,\n    grpExpense,\n    id,\n    callback\n  ) {\n    let grps = JSON.parse(this.currentUserGrpData);\n    let uptExpLen = 0;\n\n    for (let i = 0; i < grps.length; i++) {\n      if (grps[i].group_name === grpExpense.group_name) {\n        grps[i].owed = totalOwed;\n        grps[i].friends_name = grpFriends;\n        let updatedExpenses = grpExpense.expenses.filter(\n          (expense, index) =>\n            expense[\"expense_\" + index] !== currentExpense[\"expense_\" + id]\n        );\n\n        uptExpLen = updatedExpenses.length;\n        let refineUpdatedExpense = [];\n        let idxI = 0;\n        let idxJ = 0;\n        let exp = {};\n        while (idxI < uptExpLen) {\n          if (updatedExpenses[idxI][\"expense_\" + idxJ] !== undefined) {\n            exp[\"expense_\" + idxI] = updatedExpenses[idxI][\"expense_\" + idxJ];\n            exp[\"youPaid_\" + idxI] = updatedExpenses[idxI][\"youPaid_\" + idxJ];\n            exp[\"youLent_\" + idxI] = updatedExpenses[idxI][\"youLent_\" + idxJ];\n            exp[\"onMonth\"] = updatedExpenses[idxI][\"onMonth\"];\n            exp[\"onDate\"] = updatedExpenses[idxI][\"onDate\"];\n            idxI++;\n            refineUpdatedExpense.push(exp);\n            exp = {};\n          }\n          idxJ++;\n        }\n\n        grps[i].expenses = refineUpdatedExpense;\n        break;\n      }\n    }\n    //localStorage.setItem(\"Groups\", JSON.stringify(grps));\n    for (let i = 0; i < this.users.length; i++) {\n      if (this.users[i].email === this.loggedInUser) {\n        this.users[i].groups = grps;\n        break;\n      }\n    }\n\n    localStorage.setItem(\"signedInUsers\", JSON.stringify(this.users));\n\n    callback();\n  }\n}\n\nexport default new AddGroup();\n"]},"metadata":{},"sourceType":"module"}