{"ast":null,"code":"var _jsxFileName = \"/home/system8/Desktop/MyFirstReactApp/Node_Sequelize/splitwise/src/components/leftpanel.jsx\";\nimport React, { Component } from \"react\";\nimport GroupTags from \"./groupTags\";\nimport FriendTags from \"./friendtags\";\nimport axios from \"axios\";\n\nconst _require = require(\"p-iteration\"),\n      forEach = _require.forEach;\n\nclass LeftPanel extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.mapSimilarGrpMembers = async () => {\n      let groupFriends = [];\n      await forEach(this.props.group_data, async group => {\n        let groupId = new FormData();\n        groupId.append(\"group_id\", group.id);\n        let result = await axios({\n          method: \"post\",\n          url: \"/app/user/group/friends\",\n          data: groupId,\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        groupFriends = groupFriends.concat(result.data.friends);\n      });\n      console.log(\"groupFriends\", groupFriends);\n      let belongsToGrps = [];\n      /*\n      for (let j = 0; j < this.groupFriends.length; j++) {\n        if (\n          !belongsToGrps.some(user => user.name === this.groupFriends[j].name)\n        ) {\n          belongsToGrps.push({\n            name: this.groupFriends[j].name,\n            belongsTo: [this.groupFriends[j].groups_id]\n          });\n        } else {\n          for (let k = 0; k < belongsToGrps.length; k++) {\n            if (belongsToGrps[k].name === this.groupFriends[j].name) {\n              belongsToGrps[k].belongsTo.push(this.groupFriends[j].groups_id);\n              break;\n            }\n          }\n        }\n      }\n      */\n\n      console.log(\"belongsToGrps\", belongsToGrps);\n      return belongsToGrps;\n    };\n\n    this.displayGrpFriends = () => {\n      let belongsToGrps;\n      this.mapSimilarGrpMembers().then(result => {\n        belongsToGrps = result;\n        console.log(belongsToGrps);\n        return React.createElement(FriendTags, {\n          grpFriends: belongsToGrps,\n          handleClick: this.props.displayFrndDetails,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        });\n      }); //return \"<FriendTags />\";\n    };\n  }\n\n  displayGroups() {\n    //let groups = JSON.parse(AddGroup.getGroups());\n    let groupTags = [];\n\n    if (this.props.group_data) {\n      for (var i = 0; i < this.props.group_data.length; i++) {\n        groupTags.push(React.createElement(GroupTags, {\n          key: i,\n          id: i,\n          groupTags: this.props.group_data[i].name,\n          group_data: this.props.group_data[i],\n          handleClick: this.props.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }));\n      }\n    }\n\n    return groupTags;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"leftpanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"view_options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      /*href=\"www.splitwise.com\"*/\n      id: \"dashboard_option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Dashboard\"), React.createElement(\"div\", {\n      className: \"group_tags\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"GROUPS\", React.createElement(\"a\", {\n      id: \"add_group\",\n      href: \"/addgroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"+ Add\")), this.displayGroups()), React.createElement(\"div\", {\n      className: \"group_tags\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"FRIENDS\", React.createElement(\"a\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      id: \"add_group\"\n      /*href=\"/addgroup\"*/\n      ,\n      onClick: () => this.props.setAddFrndsModalShow(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"+ Add Friends\")), this.displayGrpFriends())));\n  }\n\n}\n\nexport default LeftPanel;","map":{"version":3,"sources":["/home/system8/Desktop/MyFirstReactApp/Node_Sequelize/splitwise/src/components/leftpanel.jsx"],"names":["React","Component","GroupTags","FriendTags","axios","require","forEach","LeftPanel","mapSimilarGrpMembers","groupFriends","props","group_data","group","groupId","FormData","append","id","result","method","url","data","headers","concat","friends","console","log","belongsToGrps","displayGrpFriends","then","displayFrndDetails","displayGroups","groupTags","i","length","push","name","handleClick","render","cursor","setAddFrndsModalShow"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport GroupTags from \"./groupTags\";\nimport FriendTags from \"./friendtags\";\nimport axios from \"axios\";\nconst { forEach } = require(\"p-iteration\");\n\nclass LeftPanel extends Component {\n  displayGroups() {\n    //let groups = JSON.parse(AddGroup.getGroups());\n    let groupTags = [];\n    if (this.props.group_data) {\n      for (var i = 0; i < this.props.group_data.length; i++) {\n        groupTags.push(\n          <GroupTags\n            key={i}\n            id={i}\n            groupTags={this.props.group_data[i].name}\n            group_data={this.props.group_data[i]}\n            handleClick={this.props.handleClick}\n          />\n        );\n      }\n    }\n\n    return groupTags;\n  }\n\n  mapSimilarGrpMembers = async () => {\n    let groupFriends = [];\n\n    await forEach(this.props.group_data, async group => {\n      let groupId = new FormData();\n\n      groupId.append(\"group_id\", group.id);\n\n      let result = await axios({\n        method: \"post\",\n        url: \"/app/user/group/friends\",\n        data: groupId,\n        headers: { \"Content-Type\": \"multipart/form-data\" }\n      });\n\n      groupFriends = groupFriends.concat(result.data.friends);\n    });\n\n    console.log(\"groupFriends\", groupFriends);\n\n    let belongsToGrps = [];\n    /*\n    for (let j = 0; j < this.groupFriends.length; j++) {\n      if (\n        !belongsToGrps.some(user => user.name === this.groupFriends[j].name)\n      ) {\n        belongsToGrps.push({\n          name: this.groupFriends[j].name,\n          belongsTo: [this.groupFriends[j].groups_id]\n        });\n      } else {\n        for (let k = 0; k < belongsToGrps.length; k++) {\n          if (belongsToGrps[k].name === this.groupFriends[j].name) {\n            belongsToGrps[k].belongsTo.push(this.groupFriends[j].groups_id);\n            break;\n          }\n        }\n      }\n    }\n    */\n\n    console.log(\"belongsToGrps\", belongsToGrps);\n    return belongsToGrps;\n  };\n\n  displayGrpFriends = () => {\n    let belongsToGrps;\n    this.mapSimilarGrpMembers().then(result => {\n      belongsToGrps = result;\n      console.log(belongsToGrps);\n      return (\n        <FriendTags\n          grpFriends={belongsToGrps}\n          handleClick={this.props.displayFrndDetails}\n        />\n      );\n    });\n    //return \"<FriendTags />\";\n  };\n\n  render() {\n    return (\n      <div id=\"leftpanel\">\n        <div id=\"view_options\">\n          <a /*href=\"www.splitwise.com\"*/ id=\"dashboard_option\">Dashboard</a>\n          <div className=\"group_tags\">\n            <div className=\"header\">\n              GROUPS\n              <a id=\"add_group\" href=\"/addgroup\">\n                + Add\n              </a>\n            </div>\n\n            {this.displayGroups()}\n          </div>\n\n          <div className=\"group_tags\">\n            <div className=\"header\">\n              FRIENDS\n              <a\n                style={{ cursor: \"pointer\" }}\n                id=\"add_group\"\n                /*href=\"/addgroup\"*/ onClick={() =>\n                  this.props.setAddFrndsModalShow(true)\n                }\n              >\n                + Add Friends\n              </a>\n            </div>\n            {this.displayGrpFriends()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeftPanel;\n"]},"metadata":{},"sourceType":"module"}