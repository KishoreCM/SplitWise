{"ast":null,"code":"import axios from \"axios\";\n\nclass Auth {\n  constructor() {\n    this.hasAnyGroup = () => {\n      let currentUser = new FormData();\n      currentUser.append(\"user\", sessionStorage.getItem(\"LoggedInUser\"));\n      let group;\n      axios({\n        method: \"post\",\n        url: \"/app/get/group\",\n        data: currentUser,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(response => {\n        group = response;\n        console.log(group.data);\n        return group.data;\n      }).catch(error => console.log(error));\n    };\n  }\n\n  login(user, callback) {\n    //this.authenticated = true;\n    sessionStorage.setItem(\"LoggedInUser\", user);\n    callback();\n  }\n\n  logout() {\n    //this.authenticated = false;\n    sessionStorage.removeItem(\"LoggedInUser\");\n    sessionStorage.removeItem(\"current_grp_switch\"); //callback();\n  }\n\n  isAuthenticated() {\n    let authenticated = sessionStorage.getItem(\"LoggedInUser\");\n    return authenticated;\n  }\n\n  getCurrentGrpSwitch() {\n    return sessionStorage.getItem(\"current_grp_switch\");\n  }\n\n  setCurrentGrpSwitch(groupName) {\n    sessionStorage.setItem(\"current_grp_switch\", groupName);\n  }\n\n}\n\nexport default new Auth();","map":{"version":3,"sources":["/home/system8/Desktop/MyFirstReactApp/Node_Sequelize/splitwise/src/auth.js"],"names":["axios","Auth","hasAnyGroup","currentUser","FormData","append","sessionStorage","getItem","group","method","url","data","headers","then","response","console","log","catch","error","login","user","callback","setItem","logout","removeItem","isAuthenticated","authenticated","getCurrentGrpSwitch","setCurrentGrpSwitch","groupName"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,CAAW;AAAA;AAAA,SAKTC,WALS,GAKK,MAAM;AAClB,UAAIC,WAAW,GAAG,IAAIC,QAAJ,EAAlB;AACAD,MAAAA,WAAW,CAACE,MAAZ,CAAmB,MAAnB,EAA2BC,cAAc,CAACC,OAAf,CAAuB,cAAvB,CAA3B;AACA,UAAIC,KAAJ;AACAR,MAAAA,KAAK,CAAC;AACJS,QAAAA,MAAM,EAAE,MADJ;AAEJC,QAAAA,GAAG,EAAE,gBAFD;AAGJC,QAAAA,IAAI,EAAER,WAHF;AAIJS,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAJL,OAAD,CAAL,CAMGC,IANH,CAMQC,QAAQ,IAAI;AAChBN,QAAAA,KAAK,GAAGM,QAAR;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACG,IAAlB;AACA,eAAOH,KAAK,CAACG,IAAb;AACD,OAVH,EAWGM,KAXH,CAWSC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAXlB;AAYD,KArBQ;AAAA;;AAuBTC,EAAAA,KAAK,CAACC,IAAD,EAAOC,QAAP,EAAiB;AACpB;AACAf,IAAAA,cAAc,CAACgB,OAAf,CAAuB,cAAvB,EAAuCF,IAAvC;AACAC,IAAAA,QAAQ;AACT;;AAEDE,EAAAA,MAAM,GAAG;AACP;AACAjB,IAAAA,cAAc,CAACkB,UAAf,CAA0B,cAA1B;AACAlB,IAAAA,cAAc,CAACkB,UAAf,CAA0B,oBAA1B,EAHO,CAIP;AACD;;AAEDC,EAAAA,eAAe,GAAG;AAChB,QAAIC,aAAa,GAAGpB,cAAc,CAACC,OAAf,CAAuB,cAAvB,CAApB;AACA,WAAOmB,aAAP;AACD;;AAEDC,EAAAA,mBAAmB,GAAG;AACpB,WAAOrB,cAAc,CAACC,OAAf,CAAuB,oBAAvB,CAAP;AACD;;AAEDqB,EAAAA,mBAAmB,CAACC,SAAD,EAAY;AAC7BvB,IAAAA,cAAc,CAACgB,OAAf,CAAuB,oBAAvB,EAA6CO,SAA7C;AACD;;AA/CQ;;AAkDX,eAAe,IAAI5B,IAAJ,EAAf","sourcesContent":["import axios from \"axios\";\n\nclass Auth {\n  /*constructor() {\n    this.authenticated = false;\n  }*/\n\n  hasAnyGroup = () => {\n    let currentUser = new FormData();\n    currentUser.append(\"user\", sessionStorage.getItem(\"LoggedInUser\"));\n    let group;\n    axios({\n      method: \"post\",\n      url: \"/app/get/group\",\n      data: currentUser,\n      headers: { \"Content-Type\": \"multipart/form-data\" }\n    })\n      .then(response => {\n        group = response;\n        console.log(group.data);\n        return group.data;\n      })\n      .catch(error => console.log(error));\n  };\n\n  login(user, callback) {\n    //this.authenticated = true;\n    sessionStorage.setItem(\"LoggedInUser\", user);\n    callback();\n  }\n\n  logout() {\n    //this.authenticated = false;\n    sessionStorage.removeItem(\"LoggedInUser\");\n    sessionStorage.removeItem(\"current_grp_switch\");\n    //callback();\n  }\n\n  isAuthenticated() {\n    let authenticated = sessionStorage.getItem(\"LoggedInUser\");\n    return authenticated;\n  }\n\n  getCurrentGrpSwitch() {\n    return sessionStorage.getItem(\"current_grp_switch\");\n  }\n\n  setCurrentGrpSwitch(groupName) {\n    sessionStorage.setItem(\"current_grp_switch\", groupName);\n  }\n}\n\nexport default new Auth();\n"]},"metadata":{},"sourceType":"module"}